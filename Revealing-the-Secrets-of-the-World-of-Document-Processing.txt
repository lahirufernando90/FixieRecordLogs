hello everyone uh this is purnima and

i'm very very happy today we are

starting our new series on document

understanding myself

our mvp needs no introduction his vast

contribution to the community speaks

volumes about his expertise and quality

of the work that he's doing we are very

fortunate that he's giving us some of

our precious time some exciting high

quality learning into you

so uh typically these sessions are for

people who already are working on tv so

he's we are trying you know to help

from his side is trying to uh kind of

help people who are already working on

it and scale to the next level of

proficiency for beginners we recommend

you to refer to his classic series on du

we will be giving you the

link in the chat so you can always have

a look at it and uh lehrer in this

series uh would like to address the real

questions about you like

identifying solving complex scenarios in

a practical environment how to undo a

mess that is already created how do we

plan and structure a complicated du

project how do we estimate time and cost

and when

and how to say no i think this is

something that we really uh at least i

have also struggled with at times you

know how do i say no to a client like

you know there are times where we do

have to say no as well so not only this

he has some exciting job offers in hand

if you know if you guys are interested

working on do you and you would like to

scale up on that always there are

opportunities that uh you know he has an

abundance that you can always reach out

to and we are lucky to be receiving

these precious tips from the expert

himself thank you lerou for starting

this series for us so

if you can take over uh give a brief

introduction about yourself it will be

awesome yeah

thank you for remember um so hello

everyone and uh yeah so this thing is is

coming

uh through a lot of community

interactions and also especially from

purnima as well

because uh

she

uh she has been talking to me for a long

time as you guys maybe know

and knowing this uh we all are in the

same team in in our company so

um misha a lot of things about document

understanding and one day she came up

with this idea of trying to do a series

like this so we thought of doing that

together

and um

yeah

so

um

the main idea behind that is like

we have been talking about a lot of

technical stuff and there are a lot of

um resources available online about

how to create a document understanding

project but

when it comes to the real thing um it's

a little bit different than what

we usually talk about so

this is to share that

and how to

deal with the document understanding

project in in real world so it's coming

with a little bit of experience

great uh so thanks for that

so i think let us start maybe with

addressing the elephant in the room

so i mean personally when we hear the

name document understanding you know it

feels

boring maybe scary for some of us here

for two reasons one

one is that the documents are generally

very unstructured and does not follow a

pattern right so training with them will

definitely be

you know cumbersome that's the mindset

we have

and we have only

few reference materials i mean there are

uh videos there are

a lot of you know support for this to

learn the tool but i think as far as the

practicality is concerned there is a

large gap and there are too many

challenges to handle so you know why

should i get into that that's that's

another thing that people uh kind of

hesitate so

what would you like to say you know to

for these uh things and why do you feel

in other words why do you feel people

you know uh why do you feel for document

understanding so much why should people

get into it so if you can talk about it

yeah

yeah so when it comes to document

understanding it's it's not that

straightforward

as we talk about any other ui automation

or any api related things

in those cases we know the sequence that

this is this is the flow that we need to

build

but when it comes to document

understanding it's a little bit

different because we mostly deal with

data

a lot of data

and

due to the nature of the document as you

mentioned there are

unstructured documents like emails and

like in documents you can see paragraphs

of data sometimes

and even tables handwritten data

whatever

and also some level of structured data

as well um

like tables for example

um but

you can't see all kind of variations in

document

even if you take a

the simplest thing that we all know the

invoice

the layout changes but the data is

somewhere there you know some kind of a

structure

so it's more like a semi-structured one

but when it comes to legal documents

it's mostly unstructured

you see lot of lots and lots of

paragraphs of text and it's not the same

always

but when it comes to

usually forms and things like that

there's some kind of a structure that we

can easily follow

but when it comes to

certain projects

it's

not

the case all the time you might come

across all these combinations

i came across some of these combinations

in one of the project tools that

that's what made it a lot

lot complicated than expected

so that's the challenge with document

understanding it it's the nature of the

documents and

because of that

it's not easy to really come up with a

sequential flow just like we do in our

usual ui automation or any other project

um so we need to think a lot

and we need to come up with a

set of logic

to

extract the data and to verify whatever

we extracted with this direct and to

make sure whether it's meeting all the

business rules

so it's not easy it's a lot of logic

involved in that so i think that's why

it is a little bit scary

but it doesn't mean you don't need to be

really scared about this because if

uh if you if you can understand

the complexity behind it and if you know

how to come up with this logics and

everything you need to do a little bit

of logical thinking

and then it's easy

it's not the technology that is

difficult it's the logic part that is

difficult

yeah

so personally i have seen

uh you know of course my experience with

document understanding is very limited

but i have seen some uh you know two

kinds of documents so one is

let's say invoices and receipts which

has

you know which which will have let's say

total amount on one side and each of the

documents will have the same content but

in a different order like date may be up

uh total may be down on date may be on

the right side total may be on the left

side

but all the contents are there in those

documents

we saw we

another kind of documents which is like

resumes which is like

at least in the indian scenario there is

no particular structure that we give for

resumes so

i have seen all kinds of resumes which

have you know

the plain simple document or sometimes

they add their images or sometimes if

they are you know applying for any kind

of graphics or it does kind of they they

like to showcase their you know so those

kind of and they have come in various

formats doc

rtf so how do you before you get into it

how do you kind of put them together

like what what is the

study you do and

how do you move forward

from the step one

right so

uh would you talk a little bit about

that

yeah um so that's a very good question

so basically

it's like this

um

in in any document understanding culture

it could be

any domain it could be finance it could

be id it could be something else

um

in any kind of domain they have their

own

uh set of documents they have their own

structure

and

they have their own rules

so basically

what we have to do is the first

important thing is before starting

any

development

we first need to understand what they do

just like in a normal rpa project we go

through a requirement gathering session

to capture each and every step

to understand what kind of things they

do manually what kind of business rules

are there what kind of

systems that are involved and how they

extract the data and everything

so we need to do the same thing here

and along with that

one important thing is

we need to see the document

we cannot just like go through

this

flow and then decide okay this is the

technology that i'm going to use

the most important thing is we need to

actually see the real w

whatever the structure they are in

whatever the document they use or the

format they use could be images it could

be pdf files word documents

anything

we just need to you know

go through these documents and

understand

uh

the layout of these documents but where

we can find the data that we need to

extract and in which format you have

those data i'll tell you an example

uh in one of the projects um i i came

across a set of documents which is

not structured these documents are very

unstructured because these are legal

documents

and i had to extract the name

name of a person

in that document so

yeah so in in one document

um

[Music]

the

names were in a sequential order like

line by line every line there's a

name that

which i can easily extract

but in another document it was a form

so there was a specific structure in the

document which i had to

look for the name in that structure and

extract it

but the tricky thing is

in the in another document

the same set of names were like in a

single line comma separator

wow that's like

for each of the document if you are

going to have so many different

structures

then yeah it can be crazy right how did

you handle this man

it was the

complexity

so that's why i said if the data that is

complicated it's not the technology so

so that's why you actually need to see

these kind of documents

and then once you see all these

combinations then you can easily come up

with the

idea

how you are going to extract it and

based on that you can think

what kind of technology you can use

whether it's machine learning or whether

let's say regex the most basic thing

or whether is the template that you can

create

in you have different templates that you

can use document understanding or there

is something else all together

so

these combinations

uh can help you extract all the

information so for this particular thing

i had to use the combination of things

uh one was a template

and another was named entity recognition

and another was machine learning so it

was like

multiple things together

um

yeah so that's why to decide on those

things um we really need to see what we

need to extract and

the complexity behind it so then we can

decide from where we are going to

extract and what are the

conditions that we can

include to verify the data that we

extracted is correct and so on

right ultimately the end goal is

whatever the layout you have in the

document you need to extract the

information

verify it and put it into a more

structured layout so that we can use it

in the other processes that we are going

to use

like updating a separate system or

something

okay okay great so uh i would love to

hear more about this i know in detail

how did you uh

i remember you telling me that you've

kind you know kind of done two kinds of

work one where where there's so much

intense complexity probably something

like this that you were talking about

where each document had a different

behavioral uh pattern to it and you were

actually able to involve yourself deep

and give a very high quality solution

right and train a large number of

documents i i recall you mentioning that

i think this was the example we were

talking about i'd love to hear more on

that

the second scenario will be

with much

you also told me that the complexity was

not much in terms of threatening the

logic but there was some struggle in

getting the deliverables done so this

was very surprising for me so high

complexity solution you were able to

give a high quality output there is a

simpler complexity solution you were you

know struggling to somewhere uh

struggling to deliver so before we get

into this

in detail i i have a

a couple of questions for you a very

short and brief question before we enter

into this

one

and when do you tell a client oh this

cannot be done with documented

understanding like

can everything be done like you know any

kind of document handwritten is there a

way what

what are the things that typically

cannot be done by a du that is one thing

i would like to really be wanting to ask

you

and the second question i would like to

ask you is

i know that you have been

like you've told me you've grown

literally along with ui path right you

have seen

uh you have actually contributed

somewhere to even to the community to

kind of build certain tools you've given

suggestions and you started from you

know handholding ui path from where it

started which is amazing so if you could

share that experience as well especially

with respect to du you know uh putting

together like how that experience

has helped you in any way if at all it's

helped you in your approach

uh because we we have not seen and we

probably will never get a chance to see

that because that has happened when it

started

that's something that you could talk

about it would be great so yeah please

yeah so i think that's a lot of

questions

i'm sorry

i'll start with the

first one

um like

um uh getting to know the document

understanding when

uh it was initially introduced so as i

remember

uh sorry if i'm wrong as i remember i

think they introduced this in 2019

yeah i think so

um so back then

it was the time that i was also starting

on our field

and uh

the interesting thing is right at this

time i also got the opportunity to work

on a poc for our client

and that was on uh invoice pricing for

one of the retail uh factor

so we were looking for a different

solution

and uh we came across the document

understanding for the very very first

time and

it was released like couple of days ago

back then

so we thought

maybe that's a good thing to check

and we started uh

exploring it

so it was the very first release on

document understanding

um so

back then we did not have all these uh

awesome features like the comex factors

and everything it was the

the most basic version we just had

the machine learning instructor and

the digitizing and those stuff no

classification nothing else

um

so we use that

to

see how you can extract the data

um

and it was the very first release and

we had to

struggle a lot because there were a lot

of technical things that we did not

understand

and uh

there were some issues as well which we

spoke with uipath and got those things

resolved as we did the poc

so that was the initial struggle with

du

which was a very good experience because

we also got the chance to talk with the

product team and

understand why these things are

happening and how to resolve those

things

um

so that

actually gave me a lot of understanding

about how it works

and it's from the foundation itself and

[Music]

and from there onwards

the new features that they introduced is

on top of that right

so yeah that

what

helped me to understand uh

the things in more detail level and i

know what happens

uh

behind the scenes so i can easily relate

whatever i do now to that

so that was the initial experience

and uh

yeah so then coming back to this project

the complicated one and

the other one

so the most complicated yeah sorry to

interrupt just before that um

when do you say no

that was one question that i have always

wanted to is is the possibility

can you do anything and everything under

document understanding or is there a way

where

you say no like no this cannot be done

you know

how do you make that call whether it's

possible or not because in the beginning

you will have to kind of

tell the client right like okay this can

be possible this is not possible so is

there anything like that or everything

can be tried and fit into you how does

it work

yeah there are some instances where you

need to say no you can't say yes for

every single thing because in technology

also there are some level of limitation

um

so to do that

um

we just need to

understand the possibilities of this

thing and the features it has and then

see what the client expects and

decide whether it's possible to do with

this technology or whether we need to go

ahead with another technology that that

has that thing that they're looking for

um so

it's not directly a no first

what i usually do is i just don't go and

say no directly

i always try to find a

at least a workaround solution for them

so the first thing that i usually do is

if i don't know the answer let me just

take some time to explore a little bit

um then i'll see whether it's possible

to do it

ui document understanding

or whether there is a different tool

that is capable of doing it

so sometimes we might

see that none of those things are

working and then we can say

no but if if that's

possible with

either ui path or something else then we

can tell them that

without saying no we can say

that this is not possible with this tool

but we can use this workaround to come

up with this thing or to solve this

problem

that's great that's really good to know

so

you can actually use a combination of

tools and ultimately get it done

that's very nice yeah

so one example is uh i'll tell you

so with

uh the same example that i told you

earlier where we had all those

combinations

and uh the name pattern that was there

like comma separated and line by line

and in a form and sometimes

it was hand written as well

so you can imagine the level of uh

complexity in that and especially when

it comes to handwriting

yes and the good thing is it was all in

english so we didn't have the language

as such

oh yeah that's another challenge that

you probably have right to a different

language also wow

yeah so

with those things

um that was a bit of a challenge because

it was

not easy to just use machine learning

uh only to extract all those things

because the layout completely differs

and there are a lot of variations that

we need to look for

so

at that time i had to tell them like

we can use machine learning but there's

a limitation this is the reason

and give me some time to explore a

little bit and see what are the other

workarounds that we can use in uipath

to come up with the solution for this

and that's where i introduced the name

identity recognition it's it's the

machine learning model that's available

with uipath in ai center

um but ideally it's not used within

document understanding it's a totally

different thing all together

but um

with a little bit of research we figured

out that

uh this out of the box thing if we plug

it into document understanding with a

little bit of additional things

we can extract the information we need

but the complexities we need to come up

with some logics to ensure the data that

we extract is correct

because what happens with name native

recognition is it it expects a string as

a input

and what it gives us output is the names

and all the other stuff

and that's amazing yeah

that comes in as a json so we have to

uh come up with several logics to

ensure the values that we are looking at

is the exact value that we are we are

looking for to extract because it just

it's not just one name in the document

there are so many names but we are

looking for a specific set of names

okay um

so that logic is complicated

but if you actually think about the

technology it's already there and you

just need to plug it in and that's the

easy part the complex thing is trying to

figure out whether you extracted the

character

right

so great uh thanks for your input i

think our viewers now will be ready with

a cup of coffee uh i feel like having

one myself before we go into this

further into this interesting

conversation

yes

now let's talk about the intensity of

the two projects that you've handled

i'm just very very curious to know i

mean usually when it is complex your

solution quality comes down and when

it's simpler your solution quality is

better so you you said the opposite so

i'm very curious to know

uh

what what happened what went right here

and what did not go right here you know

so please

yeah so i'll start with the complicated

one

um so i'm not allowed to share a lot of

details about the client or everything

so i'll just explain the process

um

so basically

one process

um

we had like 150 or more different types

of documents for them

and

in each type

you can see

different documents like let's say you

have a type called a

and in that type you will see emails you

will see legal documents you will see

some other types of documents with the

specific structure and you will see some

documents without a specific structure

so even in one type you see a lot of

different types of documents

and likewise

you have 150 different types

so it's a lot of documents

and

[Music]

the first thing is trying to classify

these documents into these categories

the challenge there was uh we cannot

just give any kind of keywords we had to

manually look for the keywords because

the next challenge there was

um the if you use a specific keyword

there's a very

high possibility where you can find that

keyword in another document that belongs

to a different particle

can you repeat that please i didn't get

that the keyword okay

yes so the classification is done

through

keywords keywords that you find in the

document just like the usual scenario

the invoice processing the likely

keyword is the word invoice right

okay

so using these keywords we identify to

which category this thing belongs to out

of that 150.

okay so because of the nature of this

document

because there are so

there are so many variations

there was a very likelihood that

whatever the keyword that we use

can be found in other documents that

belong to different categories

uh so basically it was not a easy task

to find this

so basically we have to train a model

to

identify these things and

do the classification properly because

they the client did not want to do this

manual they want to do this

automatically without any human involved

not a single

minute to be uh spent on this

so it has to be fully automated so

just to keep uh just to

my understanding so

you're saying that okay there's a main

category like invoices or receipts

which you will have the classification

and within that you have those set of

rules that you define

to identify whether the document is or

of an invoice type or a receipt type or

any other type is that what

is that

yeah

if you have a type called invoice it's

this process is not a financial process

it's a different thing

so the invoice is the most uh

understandable example so we'll take

that so if you have a type called

invoice

in that you will see different kind of

document

so we just need to find the proper

keyword that belongs to this invoice

catalog

okay

so it was not just one keyword

so we basically had to

ask for a lot of training data

and i i remember there were like more

than 2000 documents that we had to go

through to just to look for this keyword

so there was a lot of

yeah so there was a lot of

effort and from both our side and from

the client side to you know group these

documents because we have no idea to

which category that document belongs

they have that expertise

so we had to spend a lot of time with

them trying to understand these

different categories and

the documents that belong to those

categories

but we had to figure out the keywords

that they're not going to shut

so he basically went through all these

documents and started giving keywords

manual because we realized that if we

use

the

intelligent keyword classifier it

automatically fix the keywords

but

because of the complexity involved and

that keyword can be there in another

type

that is not possible

so we have to manually define it

so we had to go through each and every

document and then provide the keywords

manually

uh then

run it and see whether that works as

expected or if it still goes to a

different category and they have a lot

of fine tuning involved

so it was like not a straightforward

thing we had to spend about two or three

weeks to

come up with the best

pacifier that we can come up with

and then

another bunch of logic

behind it to

again validate because there is no

manual information again validate that

is correct

yeah so that was the first conflict

and then the next complexity is the

extraction as i explained before

all those different forms

so you have to use machine learning the

ner

and records and many other things again

along with a lot of complicated logic

to verify the data expected is correct

uh

yeah so that's the second thing

the third thing

is these names that we extract

we realize that it doesn't exactly match

with the system that we need to update

this data into

so let's say the document has purnima as

the name but in the system it will say

something maybe your other name

full name

so we have to figure out

another way to match this name that we

have with that

wow

it can be anything

[Music]

the most

interesting uh thing was

in the document let's say my full name

goes as la hero function which an

echocard

but in the system it will say la hero

fernando or el fernando

so it's

not the same at all exactly

so wow

so we had to come up with another

interesting logic there

to match whatever we extracted with that

name and to ensure that it is properly

matching and we did that

so we had a separate logic for that

uh so there were lots and lots of logic

cameras so these are real use cases so

that's why

uh so it's it's not the technology as i

said right there are more than enough

things that you can extract all the

information you can

pattern match all this stuff but writing

this logic

that's not easy so you have to think a

lot

and you have to come up with

a proper structure or a design to

do that

so we have to start it from the very

beginning itself and come up with that

then you see

wow uh so you kind of give a dictionary

kind of

thing is it this is the name these are

the various combinations at the back end

or

uh we cannot do that because we don't

know the combination oh yeah

yeah so

the combinations it had to figure out on

its own

um so we have to make the code dynamic

as possible to do that

so it

kind of does it on its own

okay

yeah so that's the most complicated one

and

yeah so the the best thing is we we the

good thing is we actually came up with a

good design

for this at the beginning itself

understanding all these complexities and

that really helped to

figure out what other what technologies

we need to use and how to come up with

these logics and everything so

that is one

good thing that we had and one of the

strong points as i built it

otherwise it would have been a lot more

complicated

so from my

uh from my perspective when i hear you

speak

i am understanding that the actual

coding in the tool

will be the last and

probably

the physical coding is probably the

simpler part of the whole process

probably tougher part would be to

understand it arrive at what you're

going to do how you're going to do

whether we need combination of tools

whether we need to

devise an intelligence within the logic

like you said names and i'm like oh my

god as soon as you said that it's

something like a date and a total i can

understand you know you take the numeric

or the date format field use the rejects

and do all of that but

you know something like this it's it's

uh

so you would have asked for the client a

lot of time

to you know kind of get this very very

strong right otherwise

it could get

chaotic

if you just like start okay i'm going to

start liking next week i can start your

project right and use it and start

coding it it would have gone crazy

totally but you managed a brilliant

output and uh i remember the client was

like totally over the moon uh uh you

know with with that deliverable i i

remember that

uh you have told me this so that's

that's amazing to hear so it's my

understanding right

yeah so um

even for us at the beginning uh we could

not come up with a estimate

at the without knowing any details right

so

we had to get deep into this process and

understand all these things and then

come up with a design and then only you

can give a estimate because then you

know what you are going to do and then

you know what kind of technologies that

are needed to do this

and then you can

give a estimate for that

so that's what we did and it the project

was more like a

uh two to three months thing

and we completed that one time

so

yeah so we can talk about lot more

things about how to come up with these

estimations in a later session because

there are so many things involved to

figure that out absolutely absolutely um

so yeah

estimation we will uh get into it at a

later date but uh

what do you do i mean uh so when you are

reading a document or when you're trying

to understand it

i mean from a layman's perspective how

do you start you take a notebook and pen

you jot down the points or you draw or

you think you just visualize in your

head then

you know how how how do you

put it all together because it's a vast

thing i mean two thousand documents you

have read through it or identify the

pattern there has to be some kind of

sequence that you follow right which

which makes it easier for you as well as

the client to

understand and bridge it together so

please

can you talk about yeah so i use two

things one is

um

my own way of looking at the documents

um

it may apply to all of you

so if you actually look at a document

that you have not seen before

uh what would you do

how do you go through it

you know that these are the things that

you need to look for that's all you know

but you don't know the structure of the

document you don't know where these

things are you just look at it from the

beginning right

you come from the top you just

fall down and just see line by line what

things are there how the structure looks

like and

how the data looks like highlighting

those areas yeah right

yeah so that's kind of the same thing

that i do

and if you actually convert that

to a technical group

how would your

uh

the robot or the bot or the assistant

whatever you like to call it

um would look at it

probably the same right because the

what will not know what kind of a

document that is and how the layout

looks like especially in this scenario

so it's the same

thinking or the same way that we do

is what the robot is going to do

wow that's one thing the bot as your

peer kind of so if i don't know what

will they're actually thinking

on okay if i don't know the bot won't

know and in that manner you are training

you know you're considering bought as

as a partner in this

in every step that's very interesting

that's the key

because if i put

if i keep myself there

saying that i am the robber and i have

given someone has given me this document

and i need to extract this data what

would i do

and that's the logic that we need to

include

wow this one this is an awesome input i

mean

at that stage

we don't think usually

you know you're hand holding along with

the robo and you're going each step

that's amazing too

thanks for that uh it's a takeaway for

me actually wow yeah so that's one thing

and then the other thing is along with

this requirement gathering station what

i do is i draw everything in a diagram

each and every step each and every

decision each and every thing that i

think that's needed

i put it into a diagram and then you can

connect everything

later

so that ultimately becomes the solution

design

wow so so it's basically all your

questions all your doubts you just draw

it just say can i do this or that okay

put it up

and then we'll you know we'll we'll will

we look at these rules these kind of

rules this way or that way then you know

just draw it don't you know whether it's

right or wrong doesn't matter is that

what you're saying just drawing that's

right yeah

you just draw it and once you draw it in

the most detailed level you figure out

the missing part you will eventually get

there because you know that you cannot

complete the diagram without knowing

this

because you are drawing it in the most

detailed level that you can ever come up

with

and that

that gives you the missing parts and

then you can show that to your client

and verify

whether this is correct

and whether all the business rules are

involved

and then you can convert that into your

final solution design

wow and and this i think this you kind

of naturally scale to a like you said

like a solution architect level right

because you start asking the right

questions

because you are mapped everything and

you know you know that there are gaps so

you really ask okay there is a gap

between these two what do i do here

and the client will be like yes that's

the right question so but

i will always uh you know thought how

all questions can of course 100 queries

cannot be covered but this is a very

good start

to

slowly unravel each layer

i would say right so first you

go through that highlight certain

sections then think how the bot things

what are all the things that it should

also not find it difficult in that

perspective you take notes

all your questions put it up

diagrammatically first

doesn't matter with the priscilly or

whether it is you know

may not be possible possible it's all

your questions

identify the gaps

list them down

talk to the client right that would be

like

the summary of what you said right

yes that's right

that actually helps to solve a lot of

complexities and a lot of issues and

then we know what we are doing

wow

and i think when somebody looks at

a

diagrammatic representation it gets onto

their memory very quickly rather than a

list of big list of questions like five

ten pages and where you are like

with this and then it goes back there

and things like that instead of it you

know you connect it through a flowchart

or a diagram i think that's and that

sticks to my memory very well so thanks

for that input as well

so it's lovely so this is how you

approached it did you face any

challenges while you were executing or

something that happened wrong

or not the way you wanted it to and you

had to step back and do certain courage

in spite of all this planning

did everything end up perfectly or were

there things challenges that you had to

handle as well so

yeah it's not always the perfect journey

that's not possible so

even with all those planning and

designing still when it comes to

development some of it come across with

a lot of challenges

so that's where we need to

[Music]

do a little bit of research for

ourselves and try to figure out how to

resolve those things because these

things are mostly technical challenges

um

yeah so that

is a different thing um

so there were a lot of challenges like

that

especially in

coming up with all these logics and

everything it's not easy

uh

because initially you might

think that this flow will work but when

you actually do things and when you

actually have all those combinations

coming in there are slight

changes that we need to do here and

there

to support each and every combination

really messy situations naturally

because you have

you have followed a very very detailed

approach so this is the key to avoid

like a huge

confusion right you might definitely be

facing challenges

which you will be able to understand in

a better way because you're so sorted in

foundation level itself right like

if yes

yeah so the foundation is the most

important thing so if if you have the

proper knowledge in how these things

work

and what kind of logic that you need to

build and then whatever comes next you

can plug it in on top of that

but if you don't know the foundation

then you just build a logic with

with the

information you have at the moment and

then then later if something pops up

then changing that logic to incorporate

that is going to be difficult because

you already have something in place and

you have connected the thing

in that way and then something totally

different comes in you have to change a

lot of things

and

you might

create it but

that might not be the best design

right

wow

so yeah i mean

so coming to the second aspect of your

project where you said that scenarios

were fairly

okay but it wasn't as complex as what

you just you know this probably this

project

but still there was a struggle in

delivering so why why was that gap

and

how did that happen i mean when you can

solve such a complex uh query

this should have been a breeze but what

what

what happened there

yeah that was a

totally different experience so

basically what happened there was uh it

was a invoice choicing thing

and

the business rules were a little bit

complicated but

compared to the previous one

it was pretty much straightforward

um but the challenge

we had there was

um

we did not have the proper requirement

gathering

done there were a lot of things a lot of

unknown

uh so we had to create there were a lot

of you know complexities behind it

several reasons for why it is like that

uh but which i cannot discuss for now

but

the reason is

the main reason is we did not have the

proper requirement gathering um and that

ended up knowing some other things then

we did not know some of the other

scenarios that are already there

uh so we created the flow and then while

doing testing we realized

okay so there are scenarios that we

don't know and trying to plug those in

was a little bit complicated because we

already had something in place and now

discovering new things new combinations

new data

and then writing a logic

for that and trying to combine that with

whatever the things that already

existing

that takes a lot of time a lot of

thinking and

that integration was not that easy

so this is i think one of the real real

challenges and real questions that

probably

has

to my knowledge not addressed in in the

forums before because usually we take up

a perfect scenario and we kind of

talk through it but

when you're in

when you're halfway through

already running project and you find

these challenges

so you you take a step back how to

convince the client like okay

how do you where do you start here i

mean it's already halfway through there

are no proper requirements done

there are other challenges probably you

don't have sufficient documentation as

well

so

how is your state of mind you know from

a very complex planning person kind of a

personality

to shifting to something that is

i would not say chaotic but i would say

unplanned or unstructured right it's and

you're in the middle of it like in the

eye of the storm how do you

what do you do

how do you

that's another place where you need to

say no

yeah because if we like continue

developing like that adding more and

more logic and more and more

uh things into that then at some point

we'll end up

you know the scenario where we cannot

even go back

and

we might end up in

uh

starting from scratch again because we

cannot do things from that point

um i'll tell you one example

this is not a document understand

anything but it's a different thing

um

there was another scenario where

some people had a

had automated project

uh process which was running to do

certain things and

they also had a set of requirements

where they needed to do some

enhancements and also add some new

features

so we basically had to um

do analysis understand the process and

understand what they already have and

see how we can plug those new things

that they expect

um

so that process was not designed in a

shop for me

and

it did not follow any best practices

and there were a lot of issues already

so we had to fix those things as well

and with the analysis we figured out

because of the way it is designed

um we really cannot include any of those

new things

if we do

that will end up in a

in a

very

bad situation where

it might not even run properly

and

it was not reliable at all

so at that point we had to say no and

say that we can't do this we have to

start it from the beginning because

of this reason

so we had to it's not an easy decision

and saying no to something like that is

not easy because they expect us to

uh include these things in whatever they

already have right and they are going

and saying that you need to start from

the beginning

yeah i mean

documents are already signed and

everything is moving yeah

so

you need to step back and that needs

guts

you need to step back

and

you need to say listen this was signed

up but this

has been the challenges so either we

keep it as a change request

and we we sign the document or we ask

for extra days to kind of fit this in

so you have to kind of put your stance

there and say this is how is the best

way forward from here right it's yeah

that cuts i think that that's a gut

that you need to have to tell

them like

let's slow down here isn't it

yeah so in both of those scenarios in

the one that i just explained and also

in that document understanding project

we had to say that

this is not going to work like this so

we

gave our gave our estimate that

we need this much of time to fix

whatever the things that's needed

and until such time you're not going to

do anything new

we will only focus on correcting

these things

and

we fixed

those things

up to a certain extent um

which we thought that it will give some

level of

reliability and some

level of best practices to this process

because

in this document understanding we cannot

go back and start from the beginning

that's not possible so whatever we have

right now we have to convert that into

what we think that's the best

to

uh to make sure that whatever is there

is reliable and also to ensure whatever

we are going to build is going to

fit into that thing without breaking it

so we had to do a lot of analysis there

trying to come up with whatever the

things needed so

uh thinking about those things there are

a lot of things again involved so we can

discuss that again in this question how

to fix those things

but that was the approach overall and we

fixed that and now we are continuing

with the rest of the viewers

yeah we also did a lot of other things

other than fixing stuff like

giving

some awareness to the business people

and

[Music]

from our side and also from the business

people trying to connect and get the

proper requirements done before getting

into development and documenting those

things sharing these documents with them

and a lot of stuff were involved

and uh yeah so we had to do all those

things to get things fixed

wow this is very very very interesting i

think our viewers

we are almost you know nearing the end

of the episode one and i'm sure our

viewers are very very excited to know

what's in store

uh for us next right personally i would

love to

hear the use case scenarios now you have

explained verbally and you have told us

you know this is how you approached it

and a lot of takeaways for me thank you

for that i'm sure our viewers are

feeling the same as well so

um i think the purpose why we created

the series right why you wanted to share

it is to really get into the practical

scenarios with challenges which the

people are facing and kind of

hand hold them to a proper direction

right so

so i think uh viewers i think we should

really utilize this opportunity come up

with your questions you know put it up

in the

communication any communication media

that you are comfortable with

fernando you can search him up in

linkedin he's there in youtube even in

this you can

scroll down and we can pass it on as a

comment

and

he will be answering all your queries we

are having a series just for

all of us here you know the more we ask

the more we benefit as simple as that so

so thank you i think uh this was the one

very very awesome session uh takeaways

and

you address the real issues you know the

the sensitive areas i would say the

complexities and

you know what happens when you are

joining an existing marathon that's

already happening you know you just like

a certain entry so it's very very

exciting

uh

so thank you we closed that episode one

today and hope you enjoyed the session

we'd like to hear your comments your

feedbacks and uh

feel free to share it with with any of

your friends who

you want to enhance

document understanding of what you know

move to the next level or

in their journey who are looking for

career opportunities in this field

uh please free field to contact

fernando and uh you know we are we are

always there to support you on this

thank you and one more thing on that

so we'll we will also have like open

forum session where they can connect

with us live and ask their questions so

that is also open so stay tuned for that

thanks for that your time i know how

busy you are you know your schedule is

like crazy but you're still finding time

for all of us here

thank you so much and

yes

i think our viewers are definitely going

to come up with a cup of coffee next

time so so should we

so yeah thank you so much it was

wonderful

thank you and see you in the next

episode sure bye

